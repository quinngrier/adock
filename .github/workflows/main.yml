#
# The authors of this file have waived all copyright and
# related or neighboring rights to the extent permitted by
# law as described by the CC0 1.0 Universal Public Domain
# Dedication. You should have received a copy of the full
# dedication along with this file, typically as a file
# named <CC0-1.0.txt>. If not, it may be available at
# <https://creativecommons.org/publicdomain/zero/1.0/>.
#

name: main

on:
  push:
    paths:
      - Dockerfile
      - src/**
  schedule:
    - cron: 56 20 10 * *
  workflow_dispatch:

defaults:
  run:
    shell: bash

jobs:

  # This job prevents Docker Hub from deleting our current image due to
  # inactivity, in case we keep failing to build and push a new image
  # for a long time.
  keepalive_image:
    runs-on: ubuntu-latest
    steps:
      - name: Pull current image
        id: tag
        run: |
          set -E -e -o pipefail -u -x || exit $?
          trap exit ERR
          name=docker.io/quinngrier/adock
          docker pull $name

  build_image:
    needs: keepalive_image
    runs-on: ubuntu-latest
    steps:
      - name: Construct the image tag
        id: tag
        run: |
          set -E -e -o pipefail -u -x || exit $?
          trap exit ERR
          tag=$(date +%Y-%m-%d)-$GITHUB_RUN_ID
          echo tag=$tag >>$GITHUB_OUTPUT
      - name: Checkout the repository
        uses: actions/checkout@v4
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}
      - name: Build and push the candidate image
        uses: docker/build-push-action@v4
        with:
          push: true
          tags: docker.io/quinngrier/adock:${{ steps.tag.outputs.tag }}-rc
    outputs:
      tag: ${{ steps.tag.outputs.tag }}

  test_bpmn:
    needs: build_image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v4
      - name: Run the test script
        run: |
          set -E -e -o pipefail -u -x || exit $?
          trap exit ERR
          name=docker.io/quinngrier/adock
          tag=${{ needs.build_image.outputs.tag }}
          rc=$name:$tag-rc
          bash examples/build.bash bpmn $rc
      - name: Upload the artifacts
        uses: actions/upload-artifact@v4
        with:
          name: examples_bpmn
          path: examples*/bpmn/**

  test_graphviz:
    needs: build_image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v4
      - name: Run the test script
        run: |
          set -E -e -o pipefail -u -x || exit $?
          trap exit ERR
          name=docker.io/quinngrier/adock
          tag=${{ needs.build_image.outputs.tag }}
          rc=$name:$tag-rc
          bash examples/build.bash graphviz $rc
      - name: Upload the artifacts
        uses: actions/upload-artifact@v4
        with:
          name: examples_graphviz
          path: examples*/graphviz/**

  test_pikchr:
    needs: build_image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v4
      - name: Run the test script
        run: |
          set -E -e -o pipefail -u -x || exit $?
          trap exit ERR
          name=docker.io/quinngrier/adock
          tag=${{ needs.build_image.outputs.tag }}
          rc=$name:$tag-rc
          bash examples/build.bash pikchr $rc
      - name: Upload the artifacts
        uses: actions/upload-artifact@v4
        with:
          name: examples_pikchr
          path: examples*/pikchr/**

  push_image:
    if: github.ref == 'refs/heads/main'
    needs:
      - build_image
      - test_bpmn
      - test_graphviz
      - test_pikchr
    runs-on: ubuntu-latest
    steps:
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}
      - name: Pull the candidate image
        run: |
          set -E -e -o pipefail -u -x || exit $?
          trap exit ERR
          name=docker.io/quinngrier/adock
          tag=${{ needs.build_image.outputs.tag }}
          docker pull $name:$tag-rc
      - name: Tag the final image
        run: |
          set -E -e -o pipefail -u -x || exit $?
          trap exit ERR
          name=docker.io/quinngrier/adock
          tag=${{ needs.build_image.outputs.tag }}
          docker tag $name:$tag-rc $name:$tag
          docker tag $name:$tag-rc $name:latest
      - name: Push the final image
        run: |
          set -E -e -o pipefail -u -x || exit $?
          trap exit ERR
          name=docker.io/quinngrier/adock
          tag=${{ needs.build_image.outputs.tag }}
          docker push $name:$tag
          docker push $name:latest

  merge_examples:
    if: github.ref == 'refs/heads/main'
    needs: push_image
    runs-on: ubuntu-latest
    steps:
      - name: Merge examples
        uses: actions/upload-artifact/merge@v4
        with:
          name: examples

  update_examples:
    if: github.ref == 'refs/heads/main'
    needs: merge_examples
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v4
        with:
          ref: gh-pages
      - name: Remove the old examples
        run: |
          set -E -e -o pipefail -u -x || exit $?
          trap exit ERR
          x=$(git ls-files)
          case $x in ?*)
            git rm "*"
          esac
      - name: Download the new examples
        uses: actions/download-artifact@v4
        with:
          name: examples
      - name: Add the new examples
        run: git add .
      - name: Commit the new examples
        run: |
          set -E -e -o pipefail -u -x || exit $?
          trap exit ERR
          export GIT_AUTHOR_NAME="$GITHUB_ACTOR"
          export GIT_AUTHOR_EMAIL=
          export GIT_COMMITTER_NAME="$GITHUB_SERVER_URL/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID"
          export GIT_COMMITTER_EMAIL=
          git commit -m "Update the examples"
      - name: Push the new examples
        run: git push
